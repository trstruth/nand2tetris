// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=ns0);
    Not(in=sel[1], out=ns1);

    // s0 is 1 iff sel == 00
    And(a=ns0, b=ns1, out=s0);

    // s1 is 1 iff sel == 01
    And(a=sel[0], b=ns1, out=s1);

    // s2 is 1 iff sel == 10
    And(a=ns0, b=sel[1], out=s2);

    // s3 is 1 iff sel == 11
    And(a=sel[0], b=sel[1], out=s3);

    // compute the corresponding bit in the output
    // generated by Mux4way16.py
    And(a=s0, b=a[0], out=aout0);
    And(a=s1, b=b[0], out=bout0);
    And(a=s2, b=c[0], out=cout0);
    And(a=s3, b=d[0], out=dout0);
    Or(a=aout0, b=bout0, out=i00);
    Or(a=i00, b=cout0, out=i10);
    Or(a=i10, b=dout0, out=out[0]);

    And(a=s0, b=a[1], out=aout1);
    And(a=s1, b=b[1], out=bout1);
    And(a=s2, b=c[1], out=cout1);
    And(a=s3, b=d[1], out=dout1);
    Or(a=aout1, b=bout1, out=i01);
    Or(a=i01, b=cout1, out=i11);
    Or(a=i11, b=dout1, out=out[1]);

    And(a=s0, b=a[2], out=aout2);
    And(a=s1, b=b[2], out=bout2);
    And(a=s2, b=c[2], out=cout2);
    And(a=s3, b=d[2], out=dout2);
    Or(a=aout2, b=bout2, out=i02);
    Or(a=i02, b=cout2, out=i12);
    Or(a=i12, b=dout2, out=out[2]);

    And(a=s0, b=a[3], out=aout3);
    And(a=s1, b=b[3], out=bout3);
    And(a=s2, b=c[3], out=cout3);
    And(a=s3, b=d[3], out=dout3);
    Or(a=aout3, b=bout3, out=i03);
    Or(a=i03, b=cout3, out=i13);
    Or(a=i13, b=dout3, out=out[3]);

    And(a=s0, b=a[4], out=aout4);
    And(a=s1, b=b[4], out=bout4);
    And(a=s2, b=c[4], out=cout4);
    And(a=s3, b=d[4], out=dout4);
    Or(a=aout4, b=bout4, out=i04);
    Or(a=i04, b=cout4, out=i14);
    Or(a=i14, b=dout4, out=out[4]);

    And(a=s0, b=a[5], out=aout5);
    And(a=s1, b=b[5], out=bout5);
    And(a=s2, b=c[5], out=cout5);
    And(a=s3, b=d[5], out=dout5);
    Or(a=aout5, b=bout5, out=i05);
    Or(a=i05, b=cout5, out=i15);
    Or(a=i15, b=dout5, out=out[5]);

    And(a=s0, b=a[6], out=aout6);
    And(a=s1, b=b[6], out=bout6);
    And(a=s2, b=c[6], out=cout6);
    And(a=s3, b=d[6], out=dout6);
    Or(a=aout6, b=bout6, out=i06);
    Or(a=i06, b=cout6, out=i16);
    Or(a=i16, b=dout6, out=out[6]);

    And(a=s0, b=a[7], out=aout7);
    And(a=s1, b=b[7], out=bout7);
    And(a=s2, b=c[7], out=cout7);
    And(a=s3, b=d[7], out=dout7);
    Or(a=aout7, b=bout7, out=i07);
    Or(a=i07, b=cout7, out=i17);
    Or(a=i17, b=dout7, out=out[7]);

    And(a=s0, b=a[8], out=aout8);
    And(a=s1, b=b[8], out=bout8);
    And(a=s2, b=c[8], out=cout8);
    And(a=s3, b=d[8], out=dout8);
    Or(a=aout8, b=bout8, out=i08);
    Or(a=i08, b=cout8, out=i18);
    Or(a=i18, b=dout8, out=out[8]);

    And(a=s0, b=a[9], out=aout9);
    And(a=s1, b=b[9], out=bout9);
    And(a=s2, b=c[9], out=cout9);
    And(a=s3, b=d[9], out=dout9);
    Or(a=aout9, b=bout9, out=i09);
    Or(a=i09, b=cout9, out=i19);
    Or(a=i19, b=dout9, out=out[9]);

    And(a=s0, b=a[10], out=aout10);
    And(a=s1, b=b[10], out=bout10);
    And(a=s2, b=c[10], out=cout10);
    And(a=s3, b=d[10], out=dout10);
    Or(a=aout10, b=bout10, out=i010);
    Or(a=i010, b=cout10, out=i110);
    Or(a=i110, b=dout10, out=out[10]);

    And(a=s0, b=a[11], out=aout11);
    And(a=s1, b=b[11], out=bout11);
    And(a=s2, b=c[11], out=cout11);
    And(a=s3, b=d[11], out=dout11);
    Or(a=aout11, b=bout11, out=i011);
    Or(a=i011, b=cout11, out=i111);
    Or(a=i111, b=dout11, out=out[11]);

    And(a=s0, b=a[12], out=aout12);
    And(a=s1, b=b[12], out=bout12);
    And(a=s2, b=c[12], out=cout12);
    And(a=s3, b=d[12], out=dout12);
    Or(a=aout12, b=bout12, out=i012);
    Or(a=i012, b=cout12, out=i112);
    Or(a=i112, b=dout12, out=out[12]);

    And(a=s0, b=a[13], out=aout13);
    And(a=s1, b=b[13], out=bout13);
    And(a=s2, b=c[13], out=cout13);
    And(a=s3, b=d[13], out=dout13);
    Or(a=aout13, b=bout13, out=i013);
    Or(a=i013, b=cout13, out=i113);
    Or(a=i113, b=dout13, out=out[13]);

    And(a=s0, b=a[14], out=aout14);
    And(a=s1, b=b[14], out=bout14);
    And(a=s2, b=c[14], out=cout14);
    And(a=s3, b=d[14], out=dout14);
    Or(a=aout14, b=bout14, out=i014);
    Or(a=i014, b=cout14, out=i114);
    Or(a=i114, b=dout14, out=out[14]);

    And(a=s0, b=a[15], out=aout15);
    And(a=s1, b=b[15], out=bout15);
    And(a=s2, b=c[15], out=cout15);
    And(a=s3, b=d[15], out=dout15);
    Or(a=aout15, b=bout15, out=i015);
    Or(a=i015, b=cout15, out=i115);
    Or(a=i115, b=dout15, out=out[15]);
}